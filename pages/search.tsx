import styles from '../styles/Search.module.scss'
import Head from "next/head";
import {useRouter} from "next/router";
import Result from "../components/result";
import Form from "../components/form";
import React, {useState} from 'react';
import Settings from "../components/settings";
import Footer from "../components/footer"
import Image from "next/image";

function Search(data: any) {

    const router = useRouter()
    const query = router.query

    const results = data.data.fulltext.results
    // const results = null

    // const [hints, chHints] = useState(data.data.hints.results)
    // const hints = null

    return (
        <div>
        <div className={styles.container}>
            <Head>
                <title>ultimEngine - {query.q}</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <div className={styles.form_container}>
                {/*<Form data={suggests}/>*/}
                <span className={styles.logo}>
                    <Image src="/logo.svg" alt="Out logo" width={144} height={19} />
                </span>
                <Form/>
            </div>
            <main className={styles.main}>
                <div className={styles.grid_container}>
                    <div className={styles.results} id={'results'}>
                        {results.length ? results.map((element: any, i: number) => {return (<Result data={element} key={i}/>)}) : <p>no bitches?</p>}
                    </div>
                    <div className={styles.hints}>
                        {/*{hints ? hints.map((element: any, i:number) => {return(<Hint data={element} key={i}/>)}) : <p>no maidens?</p>}*/}
                    </div>
                </div>
            </main>
            <Footer data={query.pagination}/>
        </div>
            <Settings/>
        </div>
    )
}

export default Search

export async function getServerSideProps(context: any) {

    // const res = await fetch(`http://192.168.1.242:8080${context.resolvedUrl}`)
    // const data = await res.json()
    //
    const data = {
        fulltext: {
            results: [
                {
                    url: "https://github.com",
                    title: "GitHub: Where the world builds software · GitHub",
                    description: "GitHub is where people build software. More than 73 million people use GitHub to discover, fork, and contribute to over 200 million projects.",
                    status: "Crawled"
                },
                {
                    url: "https://stokys.github.io/PVY_Ukol_08_JS_Games/",
                    title: "The Ultimate Game Bundle - GitHub Pages",
                    description: "Hi, Have you ever wanted to kill some time? Or maybe just have some fun and play videogames? Well, you're in the right place!",
                    status: "Crawled"
                },
                {
                    url: "https://www.youtube.com/watch?v=Sklc_fQBmcs",
                    title: "Next.js in 100 Seconds // Plus Full Beginner's Tutorial - YouTube",
                    description: "Enjoy the videos and music you love, upload original content, and share it all with friends, family, and the world on YouTube.",
                    status: "Crawled"
                },
                {
                    url: "https://www.seznam.cz/",
                    title: "Seznam – najdu tam, co neznám",
                    description: "Nejnavštěvovanější český internetový portál nabízející vyhledávač, e-mail, aktuální zprávy, předpověď počasí a odkazy, které se mohou hodit.",
                    status: "Crawled"
                },
                {
                    url: "https://stackoverflow.com/questions/19544452/remove-last-item-from-array",
                    title: "javascript - Remove last item from array - Stack Overflow",
                    description: "Stack Overflow is the largest, most trusted online community for developers to learn, share their programming knowledge, and build their careers.",
                    status: "Crawled"
                },
                {
                    url: "https://www.sspu-opava.cz/cs/",
                    title: "SŠPU Opava - úvodní stránka",
                    description: "Domovská stránka Střední školy průmyslové a umělecké v Opavě, přehled oborů, rozcestník, aktuální informace",
                    status: "Crawled"
                },
                {
                    url: "https://music.youtube.com/",
                    title: "YouTube Music",
                    description: "A new music service with official albums, singles, videos, remixes, live performances and more for Android, iOS and desktop. It's all here.",
                    status: "Crawled"
                },
                {
                    url: "https://polyhaven.com/a/rock_wall",
                    title: "Rock Wall Texture • Poly Haven",
                    description: "Download this free Texture from Poly Haven",
                    status: "Crawled"
                },
                {
                    url: "https://www.geoguessr.com/play-with-friends",
                    title: "Play with friends - GeoGuessr",
                    description: "GeoGuessr is a geography game which takes you on a journey around the world and challenges your ability to recognize your surroundings.",
                    status: "Crawled"
                },
                {
                    url: "https://tetr.io/",
                    title: "TETR.IO",
                    description: "Puzzle together in this modern yet familiar online stacker. Play against friends and foes all over the world, or claim a spot on the leaderboards - the stacker future is yours!",
                    status: "Crawled"
                },
                {
                    url: "https://github.com",
                    title: "GitHub: Where the world builds software · GitHub",
                    description: "GitHub is where people build software. More than 73 million people use GitHub to discover, fork, and contribute to over 200 million projects.",
                    status: "Crawled"
                },
                {
                    url: "https://github.com",
                    title: "GitHub: Where the world builds software · GitHub",
                    description: "GitHub is where people build software. More than 73 million people use GitHub to discover, fork, and contribute to over 200 million projects.",
                    status: "Crawled"
                },
                {
                    url: "https://github.com",
                    title: "GitHub: Where the world builds software · GitHub",
                    description: "GitHub is where people build software. More than 73 million people use GitHub to discover, fork, and contribute to over 200 million projects.",
                    status: "Crawled"
                },
                {
                    url: "https://github.com",
                    title: "GitHub: Where the world builds software · GitHub",
                    description: "GitHub is where people build software. More than 73 million people use GitHub to discover, fork, and contribute to over 200 million projects.",
                    status: "Crawled"
                },
                {
                    url: "https://github.com",
                    title: "GitHub: Where the world builds software · GitHub",
                    description: "GitHub is where people build software. More than 73 million people use GitHub to discover, fork, and contribute to over 200 million projects.",
                    status: "NotCrawled"
                },
                {
                    url: "https://github.com",
                    title: "GitHub: Where the world builds software · GitHub",
                    description: "GitHub is where people build software. More than 73 million people use GitHub to discover, fork, and contribute to over 200 million projects.",
                    status: "Crawled"
                }
            ]
        },
        hints: {
            results: [
                {
                    title: "343 Industries",
                    category: "Video game industry company",
                    web: "https://www.343industries.com/",
                    description: "343 Industries is an American video game developer located in Redmond, Washington, part of Xbox Game Studios. Headed by Bonnie Ross, the studio is responsible for the Halo series of military science fiction games, originally created and produced by Bungie, and is the developer of the Slipspace Engine.",
                    wiki: "https://en.wikipedia.org/wiki/343_Industries"
                },
                {
                    title: "343 Industries",
                    category: "Video game industry company",
                    web: "https://www.343industries.com/",
                    description: "343 Industries is an American video game developer located in Redmond, Washington, part of Xbox Game Studios. Headed by Bonnie Ross, the studio is responsible for the Halo series of military science fiction games, originally created and produced by Bungie, and is the developer of the Slipspace Engine.",
                    wiki: "https://en.wikipedia.org/wiki/343_Industries"
                }
            ]
        }
    }

    let tempResults = data.fulltext.results
    for (let i = 0; i < tempResults.length; i++){
        if (tempResults[i].title.length > 60){
            let temp = tempResults[i].title.substr(0, 60).split(' ')
            temp.splice(-1)
            tempResults[i].title = `${temp.join(' ')} ...`
        }
  }

    for (let i = 0; i < data.fulltext.results.length; i++) {
        let sliced = data.fulltext.results[i].url.split('/')
        let temp = `${sliced[0]}//${sliced[2]}`
        if (sliced[sliced.length-1] == ''){
            sliced.pop()
        }
        for (let j = 3; j < sliced.length; j++) {
            temp += ` > ${sliced[j]}`
        }
        Object.assign(data.fulltext.results[i], {url_cut: temp})
    }

    // for (let i = 0; i < data.hints.results.length; i++){
    //     let temp = data.hints.results[i].web.split('/')
    //     Object.assign(data.hints.results[i], {website_cut: temp[2]})
    // }

    return {props: {data}}
}